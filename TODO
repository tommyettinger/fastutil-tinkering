- Loops in sorting for big arrays should use real indices, not get/set
- Check that binary insertion sort is maybe better
- radix sort for big arrays
- Navigable sets and maps
- Front-Coded Array BIG lists
- Make digit array in radix sort shorter
- FastIterable interface
- Try tripartite quickSort or TimSort for generic sorting.
- http://zimbry.blogspot.com/2011/09/better-bit-mixing-improving-on.html
- http://java-performance.info/large-hashmap-overview-jdk-fastutil-goldman-sachs-hppc-koloboke-trove
- http://shipilev.net/
- http://java-performance.info/jmh/
- Big maps
- Cilksort
- Tune threshold for non-recursive sorts
- parallel indirect radix sort of two arrays
- Better remove() from keyset (avoid in all possible cases inheritance from AbstractSet!)
- Add set(), add() and back(long) to BigListIterator (for fastutil 8) and corresponding @Override annotations in the type-specific version
- Eliminate ping-pong implementations (look for "delegates to the corresponding generic method")
- Fix comparator() in SortedSet not being specified in the same way as in SortedMap
